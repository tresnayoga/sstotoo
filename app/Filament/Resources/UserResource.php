<?php

namespace App\Filament\Resources;

use App\Filament\Resources\UserResource\Pages;
use App\Filament\Resources\UserResource\RelationManagers;
use App\Models\User;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class UserResource extends Resource
{
    protected static ?string $model = User::class;

    protected static ?string $navigationIcon = 'heroicon-o-user-group';

    public static function getEloquentQuery(): Builder
    {
        return parent::getEloquentQuery(); // TODO: Change the autogenerated stub
    }

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\Section::make("Informasi User")
                    ->schema([
                        Forms\Components\TextInput::make("name")
                            ->label("Nama")
                            ->placeholder("Nama")
                            ->required(),
                        Forms\Components\Select::make("company_id")
                            ->label("Company")
                            ->placeholder("Pilih Company")
                            ->required()
                            ->options(
                                \App\Models\Company::all()->pluck('nama', 'id')
                            ),
                        Forms\Components\TextInput::make("email")
                            ->label("Email")
                            ->placeholder("Email")
                            ->email()
                            ->required(),
                        Forms\Components\TextInput::make("password")
                            ->label("Password")
                            ->placeholder("Password")
                            ->password()
                            ->required(),
                    ])
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make("company.nama")
                    ->label("Company")
                    ->searchable()
                    ->sortable(),
                Tables\Columns\TextColumn::make("name")
                    ->label("Nama")
                    ->searchable()
                    ->sortable(),
                Tables\Columns\TextColumn::make("email")
                    ->label("Email")
                    ->searchable()
                    ->sortable(),
            ])
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
                Tables\Actions\DeleteAction::make()
            ])
            ->bulkActions([
            ])
            ->modifyQueryUsing(fn (Builder $query) => $query->where('company_id', '!=',null));
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListUsers::route('/'),
            'create' => Pages\CreateUser::route('/create'),
            'edit' => Pages\EditUser::route('/{record}/edit'),
        ];
    }
}
